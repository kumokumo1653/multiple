#define DIGIT 30
struct NUMBER{
    int n[DIGIT];
    int sign;
};
void clearByZero(struct NUMBER *);
void dispNumber(struct NUMBER *);
void dispNumberZeroSuppress(struct NUMBER *);
void setRandom(struct NUMBER *,int);
void copyNumber(struct NUMBER *, struct NUMBER *);
void getAbs(struct NUMBER *,struct NUMBER *);
int isZero(struct NUMBER *);
int mulBy10(struct NUMBER *,struct NUMBER *);
int divBy10(struct NUMBER *,struct NUMBER *);
int setInt(struct NUMBER *,int);
int getInt(struct NUMBER *,int *);
int getIntToString(struct NUMBER*,char *);
int getDigit(struct NUMBER*);
void swap(struct NUMBER *,struct NUMBER *);
int setSign(struct NUMBER *,int);
int getSign(struct NUMBER *);
int numComp(struct NUMBER *,struct NUMBER *);
int add(struct  NUMBER *, struct NUMBER *, struct NUMBER *);
int sub(struct NUMBER * ,struct NUMBER *, struct NUMBER *);
int increment(struct NUMBER *, struct NUMBER *);
int multiple(struct NUMBER *, struct NUMBER *, struct NUMBER *);
int divide(struct NUMBER *, struct NUMBER *,struct NUMBER *, struct NUMBER *);
int divInt(struct NUMBER *, int, struct NUMBER *,int *);
int numSqrt(struct NUMBER *,struct NUMBER *);
int power(struct NUMBER *, int ,struct NUMBER *);
